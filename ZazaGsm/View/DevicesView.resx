<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BtnInvoices.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="ColType.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="ColFrontImagePath.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="ColBackImagePath.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="ColBarcode.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>